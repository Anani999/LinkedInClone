{"ast":null,"code":"var _jsxFileName = \"/home/anani/Documents/dev/projects/linkedin/client/src/components/items/PostUploadPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axiosInstance from '../api/axiosInstance';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostUploadPage = () => {\n  _s();\n  const [caption, setCaption] = useState('');\n  const [media, setMedia] = useState(null);\n  const [mediaType, setMediaType] = useState('');\n  const handleMediaChange = e => {\n    const file = e.target.files[0];\n    setMedia(file);\n    if (file.type.startsWith('image/')) {\n      setMediaType('image');\n    } else if (file.type.startsWith('video/')) {\n      setMediaType('video');\n    } else {\n      setMediaType('');\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('caption', caption);\n    formData.append('media', media);\n    formData.append('mediaType', mediaType);\n    try {\n      const response = await axiosInstance.post('/posts', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      console.log(response.data);\n    } catch (error) {\n      console.error('Error uploading post:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-upload-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Upload Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Caption:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: caption,\n          onChange: e => setCaption(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Media:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: handleMediaChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Media Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: mediaType,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(PostUploadPage, \"+dTZpX/eOUGXDWm1emYUXRBOOvk=\");\n_c = PostUploadPage;\nexport default PostUploadPage;\nvar _c;\n$RefreshReg$(_c, \"PostUploadPage\");","map":{"version":3,"names":["React","useState","axiosInstance","jsxDEV","_jsxDEV","PostUploadPage","_s","caption","setCaption","media","setMedia","mediaType","setMediaType","handleMediaChange","e","file","target","files","type","startsWith","handleSubmit","preventDefault","formData","FormData","append","response","post","headers","console","log","data","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","required","readOnly","_c","$RefreshReg$"],"sources":["/home/anani/Documents/dev/projects/linkedin/client/src/components/items/PostUploadPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axiosInstance from '../api/axiosInstance';\n\nconst PostUploadPage = () => {\n    const [caption, setCaption] = useState('');\n    const [media, setMedia] = useState(null);\n    const [mediaType, setMediaType] = useState('');\n\n    const handleMediaChange = (e) => {\n        const file = e.target.files[0];\n        setMedia(file);\n\n        if (file.type.startsWith('image/')) {\n            setMediaType('image');\n        } else if (file.type.startsWith('video/')) {\n            setMediaType('video');\n        } else {\n            setMediaType('');\n        }\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const formData = new FormData();\n        formData.append('caption', caption);\n        formData.append('media', media);\n        formData.append('mediaType', mediaType);\n\n        try {\n            const response = await axiosInstance.post('/posts', formData, {\n                headers: {\n                    'Content-Type': 'multipart/form-data'\n                }\n            });\n            console.log(response.data);\n        } catch (error) {\n            console.error('Error uploading post:', error);\n        }\n    };\n\n    return (\n        <div className=\"post-upload-page\">\n            <h1>Upload Post</h1>\n            <form onSubmit={handleSubmit}>\n                <div>\n                    <label>Caption:</label>\n                    <input \n                        type=\"text\" \n                        value={caption} \n                        onChange={(e) => setCaption(e.target.value)} \n                        required \n                    />\n                </div>\n                <div>\n                    <label>Media:</label>\n                    <input \n                        type=\"file\" \n                        onChange={handleMediaChange} \n                        required \n                    />\n                </div>\n                <div>\n                    <label>Media Type:</label>\n                    <input \n                        type=\"text\" \n                        value={mediaType} \n                        readOnly \n                    />\n                </div>\n                <button type=\"submit\">Upload</button>\n            </form>\n        </div>\n    );\n};\n\nexport default PostUploadPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}