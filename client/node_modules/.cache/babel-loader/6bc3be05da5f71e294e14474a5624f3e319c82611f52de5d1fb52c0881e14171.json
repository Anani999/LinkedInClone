{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport axiosInstance from \"../api/axiosInstance\";\nimport axios from \"axios\";\nconst ProfileContext = () => {\n  _s();\n  const [profile, setProfile] = useState({});\n  useEffect(() => {\n    const response = async () => {\n      let res = await axiosInstance.get('/profile');\n      console.log(res.data);\n      setProfile(res.data);\n    };\n    response();\n  }, []);\n  return profile;\n};\n_s(ProfileContext, \"otsYkU/BlID8pE25KteGCcN+DzM=\");\n_c = ProfileContext;\nexport default ProfileContext;\nvar _c;\n$RefreshReg$(_c, \"ProfileContext\");","map":{"version":3,"names":["useEffect","useState","axiosInstance","axios","ProfileContext","_s","profile","setProfile","response","res","get","console","log","data","_c","$RefreshReg$"],"sources":["/home/anani/Documents/dev/projects/linkedin/client/src/context/ProfileContext.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport axiosInstance from \"../api/axiosInstance\";\nimport axios from \"axios\";\n\nconst ProfileContext = () => {\n    const [profile,setProfile]= useState({});\n    useEffect(() => {\n        const response = async() => {\n            let res = await axiosInstance.get('/profile');\n            console.log(res.data);\n            setProfile(res.data);\n        };\n        response();\n    },[]);\n    return(\n        profile\n    );\n}\n\nexport default ProfileContext;"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,aAAa,MAAM,sBAAsB;AAChD,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,OAAO,EAACC,UAAU,CAAC,GAAEN,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxCD,SAAS,CAAC,MAAM;IACZ,MAAMQ,QAAQ,GAAG,MAAAA,CAAA,KAAW;MACxB,IAAIC,GAAG,GAAG,MAAMP,aAAa,CAACQ,GAAG,CAAC,UAAU,CAAC;MAC7CC,OAAO,CAACC,GAAG,CAACH,GAAG,CAACI,IAAI,CAAC;MACrBN,UAAU,CAACE,GAAG,CAACI,IAAI,CAAC;IACxB,CAAC;IACDL,QAAQ,CAAC,CAAC;EACd,CAAC,EAAC,EAAE,CAAC;EACL,OACIF,OAAO;AAEf,CAAC;AAAAD,EAAA,CAbKD,cAAc;AAAAU,EAAA,GAAdV,cAAc;AAepB,eAAeA,cAAc;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}